name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: [self-hosted, LinuxX64, personal-website]
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: [self-hosted, LinuxX64, personal-website]
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Build site
      run: |
        npm ci
        npm run build
      
    - name: Deploy with Docker Compose
      run: |
        echo "🚀 Deploying to Unraid production..."
        chmod +x ./scripts/deploy.sh
        ./scripts/deploy.sh
        
    - name: Health check
      run: |
        echo "🔍 Running health checks..."
        sleep 10
        
        # Basic health check (using your unique port)
        if curl -f http://localhost:18475 > /dev/null 2>&1; then
          echo "✅ Application is healthy"
        else
          echo "❌ Health check failed"
          exit 1
        fi
        
    - name: Notify deployment
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🎉 Personal website deployed successfully!"
          echo "🌐 Available at your configured domain"
        else
          echo "💥 Deployment failed - check logs for details"
        fi