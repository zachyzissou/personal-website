name: Deploy Personal Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggers

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build website
      run: |
        echo "üèóÔ∏è Building website..."
        npm run build
        echo "‚úÖ Build completed, checking dist directory..."
        ls -la dist/ || echo "‚ùå dist directory not found"
        
    - name: Show build logs on failure
      if: failure()
      run: |
        echo "üîç Checking for build artifacts..."
        ls -la ./ || true
        echo "üìã Showing recent logs..."
        cat npm-debug.log 2>/dev/null || echo "No npm-debug.log found"
        echo "üóÇÔ∏è Checking astro logs..."
        find . -name "*.log" -type f -exec echo "=== {} ===" \; -exec cat {} \; || true
      
    - name: Run tests (if available)
      run: |
        if npm run test --if-present; then
          echo "Tests passed"
        else
          echo "No tests found or tests failed"
        fi
      continue-on-error: true
      
    - name: Set up Docker Buildx
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push to GitHub Container Registry
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        
    - name: Deployment Summary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "‚úÖ Docker image pushed to GitHub Container Registry!"
        echo "üìã Image: ghcr.io/${{ github.repository }}:latest"
        echo ""
        echo "‚ö†Ô∏è  IMPORTANT: Make sure the package is public for unauthenticated pulls:"
        echo "   Go to: https://github.com/${{ github.repository }}/pkgs/container/personal-website"
        echo "   Set visibility to 'Public' in package settings"
        echo ""
        echo "üöÄ To deploy on Unraid:"
        echo "   1. Use the provided Unraid XML template"
        echo "   2. Or run: docker run -d --name personal-website -p 18475:8080 ghcr.io/${{ github.repository }}:latest"
        echo "üåê Access at: http://your-unraid-ip:18475"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment successful"
        else
          echo "‚ùå Deployment failed"
        fi

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check for vulnerabilities
      run: |
        echo "Running security checks..."
        # Add any additional security scanning tools here